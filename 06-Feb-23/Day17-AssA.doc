1 : mutable strings are those strings whose content can be changed without creating a new object.
    Ex. :*  StringBuilder str = new StringBuilder("Rohan");
         *  StringBuffer str = new StringBuffer("Rohan");

2 : public class reverseString {
        public static void main(String[] args) {
            String str = "PWSKILLS";
            String result = reverse(str);
            System.out.println("The reverse of "+ str +" is "+result);
        }

        public static String reverse(String str) {
            String result = "";
            for(int i = str.length()-1; i >= 0 ; i--) {
                result += str.charAt(i);
            }
            return result;
        }
    }

3 : public class ReverseSentencePreservingPosition {
        public static void main(String[] args) {
            String sentence = "Think Twice";
            String result = reverseSentencePreservePositionOf(sentence);
            System.out.println("Reverse of : "+ sentence +" by preserving \nposition is: "+result);
        }

        public static String reverseSentencePreservePositionOf(String str) {
            String[] stringArray = str.split(" ");
            String result = "";
            for(String s : stringArray){
                for(int i = s.length()-1; i >= 0 ; i--) {
                    result += s.charAt(i);
                }
                result += " ";
            }
            return result;
        }
    }


4 : import java.util.Arrays;

    public class SortStringAlphabetically {
        public static void main(String[] args) {
            String str = " Rohan";
            String result = sortStringAlphabetically(str);
            System.out.println("The string : "+str+"\nsorted as a: "+result);
        }

        private static String sortStringAlphabetically(String str) {
            str = str.toLowerCase();
            char[] charArray = str.toCharArray();
            Arrays.sort(charArray);
            String result = "";
            for(char c : charArray)
                result += c;
            return result;
        }
    }


